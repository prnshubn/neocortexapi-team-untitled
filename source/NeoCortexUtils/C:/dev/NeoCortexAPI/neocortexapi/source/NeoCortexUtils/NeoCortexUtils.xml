<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NeoCortexUtils</name>
    </assembly>
    <members>
        <member name="T:NeoCortex.NeoCortexUtils">
            <summary>
            Set of helper methods.
            </summary>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.BinarizeImage(System.String,System.Int32,System.String)">
            <summary>
            Binarize image to the file with the test name.
            </summary>
            <param name="mnistImage"></param>
            <param name="imageSize"></param>
            <param name="testName"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawBitmap(System.Int32[0:,0:],System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Draws the bitmap from array of active columns.
            </summary>
            <param name="twoDimArray">Array of active columns.</param>
            <param name="width">Output width.</param>
            <param name="height">Output height.</param>
            <param name="filePath">The bitmap PNG filename.</param>
            <param name="text">Text to be written.</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawBitmap(System.Int32[0:,0:],System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.String)">
            <summary>
            Draws the bitmap from array of active columns.
            </summary>
            <param name="twoDimArray">Array of active columns.</param>
            <param name="width">Output width.</param>
            <param name="height">Output height.</param>
            <param name="filePath">The bitmap PNG filename.</param>
            <param name="inactiveCellColor"></param>
            <param name="activeCellColor"></param>
            <param name="text">Text to be written.</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawBitmap(System.Int32[0:,0:],System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.String)">
            <summary>
            Draws the bitmap from array of active columns.
            </summary>
            <param name="twoDimArray">Array of active columns.</param>
            <param name="scale">Scale of bitmap. If array of active columns is 10x10 and scale is 5 then output bitmap will be 50x50.</param>
            <param name="filePath">The bitmap filename.</param>
            <param name="activeCellColor"></param>
            <param name="inactiveCellColor"></param>
            <param name="text">Text to be written.</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawBitmaps(System.Collections.Generic.List{System.Int32[0:,0:]},System.String,System.Int32,System.Int32)">
            <summary>
            TODO: add comment
            </summary>
            <param name="twoDimArrays"></param>
            <param name="filePath"></param>
            <param name="bmpWidth"></param>
            <param name="bmpHeight"></param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawBitmaps(System.Collections.Generic.List{System.Int32[0:,0:]},System.String,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Drawas bitmaps from list of arrays.
            </summary>
            <param name="twoDimArrays">List of arrays to be represented as bitmaps.</param>
            <param name="filePath">Output image path.</param>
            <param name="inactiveCellColor">Color of inactive bit.</param>
            <param name="activeCellColor">Color of active bit.</param>
            <param name="bmpWidth">The width of the bitmap.</param>
            <param name="bmpHeight">The height of the bitmap.</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.Draw1dHeatmap(System.Collections.Generic.List{System.Double[]},System.Collections.Generic.List{System.Int32[]},System.Collections.Generic.List{System.Int32[]},System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Combines heatmap and normalized permanence representations into a single image with title.
            This Drwaitng Function is used to Visulalization of the Permanence Values.
            </summary>
            <param name="heatmapData">List of arrays representing the heatmap data.</param>
            <param name="normalizedData">List of arrays representing normalized data below the heatmap.</param>
            <param name="encodedData">List of arrays of original Encoded data encoded by the scaler encoder.</param>
            <param name="filePath">Output image path for saving the combined image.</param>
            <param name="bmpWidth">Width of the heatmap bitmap (default is 1024).</param>
            <param name="bmpHeight">Height of the heatmap bitmap (default is 1024).</param>
            <param name="redStart">Threshold for values above which pixels are red (default is 200).</param>
            <param name="yellowMiddle">Threshold for values between which pixels are yellow (default is 127).</param>
            <param name="greenStart">Threshold for values below which pixels are green (default is 20).</param>
            <param name="enlargementFactor">Factor by which the image is enlarged for better visualization (default is 4).</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawHeatmaps(System.Collections.Generic.List{System.Double[0:,0:]},System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Drawas bitmaps from list of arrays.
            </summary>
            <param name="twoDimArrays">List of arrays to be represented as bitmaps.</param>
            <param name="filePath">Output image path.</param>
            <param name="bmpWidth">The width of the bitmap.</param>
            <param name="bmpHeight">The height of the bitmap.</param>
            <param name="greenStart">ALl values below this value are by defaut green.
            Values higher than this value transform to yellow.</param>
            <param name="yellowMiddle">The middle of the heat. Values lower than this value transforms to green.
            Values higher than this value transforms to red.</param>
            <param name="redStart">Values higher than this value are by default red. Values lower than this value transform to yellow.</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.DrawCombinedSimilarityPlot(System.Collections.Generic.List{System.Double},System.String,System.Int32,System.Int32)">
            <summary>
            Draws a combined similarity plot based on the given list of similarity values.
            This graph can Visulaze the Similarity Bar graph of multiple inputs between the Encoded inputs
            and the Reconsturced Inputs using Reconstruct Method.
            </summary>
            <param name="similarities">The list of similarity values to be plotted.</param>
            <param name="filePath">The file path where the plot image will be saved.</param>
            <param name="imageWidth">Width of the graph.</param>
            <param name="imageHeight">Height of the graph.</param>
            <remarks>
            The plot includes bars representing similarity values, indexed from left to right. Each bar's height corresponds to its similarity value.
            Axis labels, a title, a scale indicating similarity values, and text indicating the similarity range are added to the plot.
            </remarks>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.GetColorForSimilarity(System.Double)">
            <summary>
            Determines the color based on the given similarity level.
            </summary>
            <param name="similarity">The similarity level to determine the color for (range: 0 to 1).</param>
            <returns>The color corresponding to the similarity level, ranging from light gray to dark orange.</returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.GetBarColor(System.Double)">
            <summary>
            Determines the color of a bar based on the given similarity level.
            </summary>
            <param name="similarity">The similarity level to determine the color for.</param>
            <returns>The color corresponding to the similarity level.</returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.ReadCsvIntegers(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.CreateRandomVector(System.Int32,System.Int32)">
            <summary>
            Creates the random vector.
            </summary>
            <param name="bits"></param>
            <param name="nonZeroPct"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.MeanOf(System.Double[])">
            <summary>
            Calculate mean value of array of numbers. 
            </summary>
            <param name="colData"> array of values </param>
            <returns>calculated mean</returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.CorrelationPearson(System.Double[],System.Double[])">
            <summary>
            Calculates Pearson correlation coefficient of two data sets
            </summary>
            <param name="data1"> first data set</param>
            <param name="data2">second data set </param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.ReadCsvFileTest(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.Create2DVector(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the 2D box vector.
            </summary>
            <param name="heightBits">The heght of the vector.</param>
            <param name="widthBits">The width of the vector.</param>
            <param name="nonzeroBitStart">Position of the first nonzero bit.</param>
            <param name="nonZeroBitEnd">Position of the last nonzero bit.</param>
            <returns>The two dimensional box.</returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.CreateVector(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the 1D vector.
            </summary>
            <param name="bits">The number of bits vector.</param>
            <param name="nonzeroBitStart">Position of the first nonzero bit.</param>
            <param name="nonZeroBitEnd">Position of the last nonzero bit.</param>
            <returns>The one dimensional vector.</returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.CreateDenseArray(System.Collections.Generic.Dictionary{System.Int32,System.Double},System.Int32)">
            <summary>
            Creates the dence array of permancences from sparse array.
            </summary>
            <param name="array">A dense array of permancences. Ever permanence value is a sum of permanence valus of
            active mini-columns to the input neuron with the given index.</param>
            <param name="numInputNeurons">Number of input neurons connected from mini-columns at the proximal segment.</param>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.Softmax(System.Collections.Generic.Dictionary{System.Int32,System.Double},System.Int32)">
            <summary>
            Calculates the softmax function.
            </summary>
            <param name="sparseArray">The array if indicies of active mini-columns or cells.</param>
            <param name="numInputNeurons">The number of existing input neurons.</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.NeoCortexUtils.Softmax(System.Double[])">
            <summary>
            Calculates the softmax of the input array.
            </summary>
            <param name="input"></param>
            <returns>The softmax array.</returns>
        </member>
        <member name="T:NeoCortex.SdrRepresentation">
            <summary>
            Sparse distributed representations 
            </summary>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.OverlapArraFun(System.Int32[],System.Int32[])">
            <summary>
            Creates a vector which consists of common no of "1's" in two input vectors/SDRs
            </summary>
            <param arr1="1st array"></param>
            <param arr2="2nd array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.ArrayUnion(System.Collections.Generic.List{System.Int32[]})">
            <summary>
            Creates a vector which consists of all no of "1's" in two input vectors/SDRs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.GetIntArray(System.Int32[],System.Int32)">
            <summary>
            Converts active columns index array into to binary array 
            </summary>
            <param activeCols="active Columns of SDR"></param>
            <param numOfCols="size of the output vector"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.TraceColumnsOverlap(System.Collections.Generic.List{System.Double[0:,0:]},System.IO.StreamWriter,System.String)">
            <summary>
            Show SDR in "Column/Overlap Ratio" and generate its Excel file 
            </summary>
            <param overlapArrays="Contains the overlaps of the columns during SDR learning of Spatial Pooler"></param>
            <param swActCol1="to write in Excel file"></param>
            <returns>Max overlap.</returns>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.DrawIntersections(System.Int32[0:,0:],System.Int32[0:,0:],System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.String)">
            <summary>
            Generate intersection between two SDRs
            </summary>
            <param twoDimArray="Overlap array of SDR"></param>
            <param woDimArray2="Union array of SDR"></param>
            <returns></returns>
        </member>
        <member name="T:NeoCortex.SdrRepresentation.TraceFormat">
            <summary>
            <br>values: Text, Excel or Graph</br>
            </summary>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.TraceColumnsOverlap(System.Collections.Generic.List{System.Int32[0:,0:]},System.Int32[],NeoCortex.SdrRepresentation.TraceFormat,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            <br>Choice function for ease of switching between the modes</br>
            <br>The functions called inside can also be called independently</br>
            <br>TraceColumnsOverlap()</br>
            <br>TraceInLineFormat()</br>
            <br>TraceInGraphFormat()</br>
            </summary>
            <param name="overlapArrays"></param>
            <param name="colDims"></param>
            <param name="formatTypes"></param>
            <param name="threshold"></param>
            <param name="aboveThreshold"></param>
            <param name="belowThreshold"></param>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.TraceInLineFormat(System.Collections.Generic.List{System.Int32[0:,0:]},System.Int32[])">
            <summary>
            <br>To trace out the column Overlap values and output them to a txt file.</br>
            <br>at SdrRepresentation_Output/TraceInLineFormat.txt </br>
            <br>Needs to Include link md to description</br>
            </summary>
            <param name="overlapArrays">overlap result from calling an object of type Connection.OverLaps</param>
            <param name="colDims">dimension in [width, length] array</param>        
        </member>
        <member name="M:NeoCortex.SdrRepresentation.TraceInGraphFormat(System.Collections.Generic.List{System.Int32[0:,0:]},System.Int32[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.String)">
            <summary>
            <br>To represent the column overlap values in graph format</br>
            <br>The current default output size of the graph is 500, 524</br>
            <br>Needs to Include link md to description</br>
            </summary>
            <param name="overlapArrays">overlap result from calling an object of type Connection.OverLaps</param>
            <param name="dims">dimension in [width, length] array</param>
            <param name="threshold"></param>
            <param name="aboveThreshold"></param>
            <param name="belowThreshold"></param>
        </member>
        <member name="M:NeoCortex.SdrRepresentation.TraceInExcelFormat(System.Collections.Generic.List{System.Int32[0:,0:]},System.Int32[])">
            <summary>
            <br>To export the column overlap values to excel</br>
            <br>Needs to Include link md to description</br>
            </summary>
            <param name="overlapArrays">overlap result from calling an object of type Connection.OverLaps</param>
            <param name="colDims">dimension in [width, length] array</param>       
        </member>
    </members>
</doc>
